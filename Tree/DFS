We can optimize general DFS -which was for the graph- as there's no cycles in the trees so we only reach the node from it's parent so there's no need for visited array.
We only need to know the parent of the current node to avoid visiting it again.

void dfs(int v,int par) //calling with dfs(0,-1)
{
    for(int i=0;i<adjList[v].size();i++)
        if(adjList[v][i]!=par)
        {
            dfs(adjList[v][i],v);
        }
}
